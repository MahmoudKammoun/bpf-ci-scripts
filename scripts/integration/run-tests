#!/bin/bash

set -e
set -o pipefail

# Set path to contain Go binaries explicitly; see issue 566.
export PATH=$PATH:/usr/local/go/bin:/usr/local/clang/bin:/home/vagrant/go/bin:/home/vagrant/bin
export TEST_SUITE="runtime-tests"
mkdir -p ./cilium-files 

function run_tests_cleanup() {
  docker rm -f cilium-consul cilium-docker || true
  cilium cleanup -f || true
  pkill -f cilium || true
}

trap run_tests_cleanup EXIT

function run_test() {
  test=$1
  msg=$2
  file=$(basename $test)
  filename="${file%.*}"
  mkdir -p ./cilium-files/"${filename}"
  echo "#################################################"
  echo
  echo
  echo
  echo "Starting test ${test}${msg}"
  echo
  echo
  echo
  ./$test | tee ./cilium-files/"${filename}"/output.txt
  echo
  echo
  echo
  echo "Finished test ${test}${msg}"
  echo
  echo
  echo
  echo "#################################################"
}

# Reuse some functions
dir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
source "${dir}/helpers.bash"
# dir might have been overwritten by helpers.bash
dir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

log "Starting kvstore"
docker run -d \
 --name "cilium-consul" \
 -p 8500:8500 \
 -e 'CONSUL_LOCAL_CONFIG={"skip_leave_on_interrupt": true}' \
 consul:0.8.3 \
 agent -client=0.0.0.0 -server -bootstrap-expect 1 \

log "Starting Docker plugin"
cilium-docker -D &

# Run only a few tests with multiple Clang versions
CLANG_VERSIONS=("5.0.0" "4.0.0" "3.9.1" "3.9.0" "4.0.1")
SELECTED_TESTS=("01-ct.sh" "06-lb.sh")
for test in ${SELECTED_TESTS[@]}; do
  for c in ${CLANG_VERSIONS[@]}; do
    CLANG_PATH="/usr/local/clang+llvm-$c"
    if [ -d "$CLANG_PATH" ]; then
      log "Manually start Cilium"
      cilium-agent --auto-ipv6-node-routes --ipv4-range 10.11.0.0/16 \
	--kvstore-opt consul.address=127.0.0.1:8500 --kvstore consul -t vxlan \
	--access-log=/var/log/cilium-access.log &

      log "Wait for Cilium"
      wait_for_cilium_status

      # Change clang version and run test
      export PATH=$CLANG_PATH/bin:$PATH
      run_test $test " using LLVM release $c"

      # Stop the agent
      pkill -f cilium || true
      wait_for_cilium_shutdown
    else
      echo "skipping no clang at ${CLANG_PATH}"
    fi
  done
done
